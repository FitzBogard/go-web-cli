// Code generated by apigen generator.

package initialize

import (
	"time"

	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/hertz-contrib/pprof"
	"github.com/spf13/viper"

	"go-web-cli/internal/pkg/middleware"
	"go-web-cli/pkg/biz_name/delivery/http"
)

func Hertz(handler *http.Handler) *server.Hertz {
	openMetric := viper.GetBool("metrics.open")
	readTimeout, _ := time.ParseDuration(viper.GetString("hertz.read_timeout"))
	writeTimeout, _ := time.ParseDuration(viper.GetString("hertz.write_timeout"))
	bind := viper.GetString("hertz.bind")
	openPprof := viper.GetBool("pprof.open")
	h := server.Default(
		server.WithHostPorts(bind),
		server.WithReadTimeout(readTimeout),
		server.WithWriteTimeout(writeTimeout),
	)

	if openPprof {
		pprof.Register(h)
	}
	h.Use(
		middleware.ErrorHandle,
	)
	if openMetric {
		h.Use(middleware.Metrics)
	}

	http.RegisterRoute(h, handler)

	logger.Info().Msgf(" hertz started. bind at: %s", bind)
	return h
}
